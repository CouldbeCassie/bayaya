### User Signup Endpoint

**Endpoint**: `/signup`

**Method**: POST

**Description**: Registers a new user.

**Security Measures**:
1. **Input Validation**: Validates the `username` and `password` fields to ensure they meet length and type requirements.
2. **Password Hashing**: Uses bcrypt to hash passwords before storing them in the database.
3. **HTTPS**: Ensures data is encrypted in transit.
4. **Security Headers**: Helmet middleware is used to set secure HTTP headers.
5. **Rate Limiting**: Limits the number of signup requests to prevent abuse.

**Example Code**:
```javascript
app.post('/signup', async (req, res) => {
    const { username, password } = req.body;
    if (username && typeof username === 'string' && password && typeof password === 'string') {
        const hashedPassword = await bcrypt.hash(password, 10);
        users.push({ username, password: hashedPassword });
        saveData(usersFilePath, users); // Save users to JSON file
        console.log('User added:', { username, password: hashedPassword });
        res.status(201).send();
    } else {
        res.status(400).send('Invalid input');
    }
});
